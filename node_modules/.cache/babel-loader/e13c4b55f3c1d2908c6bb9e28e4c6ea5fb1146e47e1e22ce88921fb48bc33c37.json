{"ast":null,"code":"// localStorage utilities for chat data management\n\nconst STORAGE_KEYS = {\n  CURRENT_USER: 'chatapp_current_user',\n  MESSAGES: 'chatapp_messages',\n  USERS: 'chatapp_users'\n};\n\n// User management\nexport const getCurrentUser = () => {\n  const user = localStorage.getItem(STORAGE_KEYS.CURRENT_USER);\n  return user ? JSON.parse(user) : null;\n};\nexport const setCurrentUser = user => {\n  localStorage.setItem(STORAGE_KEYS.CURRENT_USER, JSON.stringify(user));\n};\nexport const getUsers = () => {\n  const users = localStorage.getItem(STORAGE_KEYS.USERS);\n  return users ? JSON.parse(users) : [];\n};\nexport const addUser = user => {\n  const users = getUsers();\n  const existingUser = users.find(u => u.id === user.id);\n  if (!existingUser) {\n    users.push(user);\n    localStorage.setItem(STORAGE_KEYS.USERS, JSON.stringify(users));\n  }\n  return users;\n};\n\n// Message management\nexport const getMessages = () => {\n  const messages = localStorage.getItem(STORAGE_KEYS.MESSAGES);\n  return messages ? JSON.parse(messages) : [];\n};\nexport const addMessage = message => {\n  const messages = getMessages();\n  const newMessage = {\n    ...message,\n    id: Date.now() + Math.random(),\n    // Simple ID generation\n    timestamp: new Date().toISOString()\n  };\n  messages.push(newMessage);\n  localStorage.setItem(STORAGE_KEYS.MESSAGES, JSON.stringify(messages));\n  return newMessage;\n};\nexport const getConversation = (user1Id, user2Id) => {\n  const messages = getMessages();\n  return messages.filter(message => message.senderId === user1Id && message.receiverId === user2Id || message.senderId === user2Id && message.receiverId === user1Id).sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp));\n};\nexport const clearAllData = () => {\n  Object.values(STORAGE_KEYS).forEach(key => {\n    localStorage.removeItem(key);\n  });\n};","map":{"version":3,"names":["STORAGE_KEYS","CURRENT_USER","MESSAGES","USERS","getCurrentUser","user","localStorage","getItem","JSON","parse","setCurrentUser","setItem","stringify","getUsers","users","addUser","existingUser","find","u","id","push","getMessages","messages","addMessage","message","newMessage","Date","now","Math","random","timestamp","toISOString","getConversation","user1Id","user2Id","filter","senderId","receiverId","sort","a","b","clearAllData","Object","values","forEach","key","removeItem"],"sources":["/home/niroj/Desktop/chatapp/src/utils/localStorage.js"],"sourcesContent":["// localStorage utilities for chat data management\n\nconst STORAGE_KEYS = {\n  CURRENT_USER: 'chatapp_current_user',\n  MESSAGES: 'chatapp_messages',\n  USERS: 'chatapp_users'\n};\n\n// User management\nexport const getCurrentUser = () => {\n  const user = localStorage.getItem(STORAGE_KEYS.CURRENT_USER);\n  return user ? JSON.parse(user) : null;\n};\n\nexport const setCurrentUser = (user) => {\n  localStorage.setItem(STORAGE_KEYS.CURRENT_USER, JSON.stringify(user));\n};\n\nexport const getUsers = () => {\n  const users = localStorage.getItem(STORAGE_KEYS.USERS);\n  return users ? JSON.parse(users) : [];\n};\n\nexport const addUser = (user) => {\n  const users = getUsers();\n  const existingUser = users.find(u => u.id === user.id);\n  if (!existingUser) {\n    users.push(user);\n    localStorage.setItem(STORAGE_KEYS.USERS, JSON.stringify(users));\n  }\n  return users;\n};\n\n// Message management\nexport const getMessages = () => {\n  const messages = localStorage.getItem(STORAGE_KEYS.MESSAGES);\n  return messages ? JSON.parse(messages) : [];\n};\n\nexport const addMessage = (message) => {\n  const messages = getMessages();\n  const newMessage = {\n    ...message,\n    id: Date.now() + Math.random(), // Simple ID generation\n    timestamp: new Date().toISOString()\n  };\n  messages.push(newMessage);\n  localStorage.setItem(STORAGE_KEYS.MESSAGES, JSON.stringify(messages));\n  return newMessage;\n};\n\nexport const getConversation = (user1Id, user2Id) => {\n  const messages = getMessages();\n  return messages.filter(message => \n    (message.senderId === user1Id && message.receiverId === user2Id) ||\n    (message.senderId === user2Id && message.receiverId === user1Id)\n  ).sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp));\n};\n\nexport const clearAllData = () => {\n  Object.values(STORAGE_KEYS).forEach(key => {\n    localStorage.removeItem(key);\n  });\n}; "],"mappings":"AAAA;;AAEA,MAAMA,YAAY,GAAG;EACnBC,YAAY,EAAE,sBAAsB;EACpCC,QAAQ,EAAE,kBAAkB;EAC5BC,KAAK,EAAE;AACT,CAAC;;AAED;AACA,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAClC,MAAMC,IAAI,GAAGC,YAAY,CAACC,OAAO,CAACP,YAAY,CAACC,YAAY,CAAC;EAC5D,OAAOI,IAAI,GAAGG,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC,GAAG,IAAI;AACvC,CAAC;AAED,OAAO,MAAMK,cAAc,GAAIL,IAAI,IAAK;EACtCC,YAAY,CAACK,OAAO,CAACX,YAAY,CAACC,YAAY,EAAEO,IAAI,CAACI,SAAS,CAACP,IAAI,CAAC,CAAC;AACvE,CAAC;AAED,OAAO,MAAMQ,QAAQ,GAAGA,CAAA,KAAM;EAC5B,MAAMC,KAAK,GAAGR,YAAY,CAACC,OAAO,CAACP,YAAY,CAACG,KAAK,CAAC;EACtD,OAAOW,KAAK,GAAGN,IAAI,CAACC,KAAK,CAACK,KAAK,CAAC,GAAG,EAAE;AACvC,CAAC;AAED,OAAO,MAAMC,OAAO,GAAIV,IAAI,IAAK;EAC/B,MAAMS,KAAK,GAAGD,QAAQ,CAAC,CAAC;EACxB,MAAMG,YAAY,GAAGF,KAAK,CAACG,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKd,IAAI,CAACc,EAAE,CAAC;EACtD,IAAI,CAACH,YAAY,EAAE;IACjBF,KAAK,CAACM,IAAI,CAACf,IAAI,CAAC;IAChBC,YAAY,CAACK,OAAO,CAACX,YAAY,CAACG,KAAK,EAAEK,IAAI,CAACI,SAAS,CAACE,KAAK,CAAC,CAAC;EACjE;EACA,OAAOA,KAAK;AACd,CAAC;;AAED;AACA,OAAO,MAAMO,WAAW,GAAGA,CAAA,KAAM;EAC/B,MAAMC,QAAQ,GAAGhB,YAAY,CAACC,OAAO,CAACP,YAAY,CAACE,QAAQ,CAAC;EAC5D,OAAOoB,QAAQ,GAAGd,IAAI,CAACC,KAAK,CAACa,QAAQ,CAAC,GAAG,EAAE;AAC7C,CAAC;AAED,OAAO,MAAMC,UAAU,GAAIC,OAAO,IAAK;EACrC,MAAMF,QAAQ,GAAGD,WAAW,CAAC,CAAC;EAC9B,MAAMI,UAAU,GAAG;IACjB,GAAGD,OAAO;IACVL,EAAE,EAAEO,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC;IAAE;IAChCC,SAAS,EAAE,IAAIJ,IAAI,CAAC,CAAC,CAACK,WAAW,CAAC;EACpC,CAAC;EACDT,QAAQ,CAACF,IAAI,CAACK,UAAU,CAAC;EACzBnB,YAAY,CAACK,OAAO,CAACX,YAAY,CAACE,QAAQ,EAAEM,IAAI,CAACI,SAAS,CAACU,QAAQ,CAAC,CAAC;EACrE,OAAOG,UAAU;AACnB,CAAC;AAED,OAAO,MAAMO,eAAe,GAAGA,CAACC,OAAO,EAAEC,OAAO,KAAK;EACnD,MAAMZ,QAAQ,GAAGD,WAAW,CAAC,CAAC;EAC9B,OAAOC,QAAQ,CAACa,MAAM,CAACX,OAAO,IAC3BA,OAAO,CAACY,QAAQ,KAAKH,OAAO,IAAIT,OAAO,CAACa,UAAU,KAAKH,OAAO,IAC9DV,OAAO,CAACY,QAAQ,KAAKF,OAAO,IAAIV,OAAO,CAACa,UAAU,KAAKJ,OAC1D,CAAC,CAACK,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAId,IAAI,CAACa,CAAC,CAACT,SAAS,CAAC,GAAG,IAAIJ,IAAI,CAACc,CAAC,CAACV,SAAS,CAAC,CAAC;AACjE,CAAC;AAED,OAAO,MAAMW,YAAY,GAAGA,CAAA,KAAM;EAChCC,MAAM,CAACC,MAAM,CAAC3C,YAAY,CAAC,CAAC4C,OAAO,CAACC,GAAG,IAAI;IACzCvC,YAAY,CAACwC,UAAU,CAACD,GAAG,CAAC;EAC9B,CAAC,CAAC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}